version: '3.8'

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - project2_network

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSET_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - project2_network
    tty: true

  producer:
    build:
      context: ./producer/
    container_name: producer
    depends_on:
      - kafka
    volumes:
      - ./producer/data:/home/producer/data
      - ./producer/src:/home/producer/src
    env_file:
      - .env
    networks:
      - project2_network
    entrypoint: ["tail","-f","/dev/null"]

  flink-jobmanager:
    build:
      context: ./flink/
      dockerfile: jobmanager.dockerfile
    container_name: jobmanager
    hostname: jobmanager
    ports:
      - "8081:8081"
      - "6123:6123"
      - "9250:9249"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
    depends_on:
      - kafka
    networks:
      - project2_network
    volumes:
      - ./flink/src:/opt/flink/jobs/src
      - ./flink/config:/opt/flink/conf

  flink-taskmanager:
    build:
      context: ./flink/
      dockerfile: taskmanager.dockerfile
    container_name: taskmanager
    hostname: taskmanager
    ports:
      - "8082:8081"
      - "9251:9249"
    depends_on:
      - flink-jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9249
        metrics.latency.interval: 1000
    networks:
      - project2_network
    volumes:
      - ./flink/src:/opt/flink/jobs/src
      - ./flink/config:/opt/flink/conf

  prometheus:
    image: prom/prometheus
    ports:
      - 9010:9010
      - 9090:9090
    networks:
      - project2_network
    tty: true
    volumes:
      - ./prometheus/prometheus.yml:/prometheus/prometheus.yml


  grafana:
    image: grafana/grafana
    networks:
      - project2_network
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    environment:
      - auth.anonymous.enabled=true
      - auth.anonymous.org_role = Admin
    tty: true

  consumer:
    container_name: consumer
    build:
      context: ./consumer
      dockerfile: Dockerfile
    volumes:
      - ./Results:/app/src/Results
      - ./consumer/src:/app/src
    depends_on:
      - kafka
    networks:
      - project2_network

networks:
  project2_network:
    driver: bridge
