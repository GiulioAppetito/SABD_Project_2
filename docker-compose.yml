version: '3.8'

services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - project2_network

  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSET_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - project2_network
    tty: true

  producer:
    build:
      context: ./producer/
    container_name: producer
    depends_on:
      - kafka
    volumes:
      - ./producer/data:/home/producer/data
    networks:
      - project2_network
    entrypoint: ["tail","-f","/dev/null"]

  flink-jobmanager:
    build:
      context: ./flink/
      dockerfile: jobmanager.dockerfile
    container_name: jobmanager
    hostname: jobmanager
    ports:
      - "8081:8081"
      - "6123:6123"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        jobmanager.memory.process.size: 1024m
    networks:
      - project2_network


  flink-taskmanager:
    build:
      context: ./flink/
      dockerfile: taskmanager.dockerfile
    container_name: taskmanager
    hostname: taskmanager
    depends_on:
      - flink-jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        taskmanager.numberOfTaskSlots: 2
        taskmanager.memory.process.size: 1024m
    networks:
      - project2_network

networks:
  project2_network:
    driver: bridge
